apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: cross-seed
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: cross-seed
    template:
      data:
        config.js: |-
          function fetchIndexers(baseUrl, apiKey, tag){
            const buffer = require('child_process').execSync(`curl -fsSL "${baseUrl}/api/v1/tag/detail?apikey=${apiKey}"`);
            const response = JSON.parse(buffer.toString('utf8'));
            const indexerIds = response.filter(t => t.label === tag)[0]?.indexerIds ?? [];
            const indexers = indexerIds.map(i => `${baseUrl}/${i}/api?apikey=${apiKey}`);
            console.log(`Loaded ${indexers.length} indexers from Prowlarr`);
            return indexers;
          }
          module.exports = {
            action: "inject",
            searchCadence: "24 hours",
            excludeOlder: "21 days",
            excludeRecentSearch: "7 days",
            apiKey: "{{ .cross_seed_api_key }}",
            blockList: ["category:manual"],
            linkCategory: "cross-seed",
            linkDirs: ["/vault/Downloads/qbittorrent/complete/cross-seed"],
            linkType: "symlink",
            matchMode: "partial",
            port: Number(process.env.CROSS_SEED_PORT),
            skipRecheck: true,
            radarr: ["http://radarr.media.svc.cluster.local:8080/?apikey={{ .radarr_api_key }}"],
            sonarr: ["http://sonarr.media.svc.cluster.local:8080/?apikey={{ .sonarr_api_key }}"],
            torrentClients: ["qbittorrent:http://qbittorrent.media.svc.cluster.local:8080"],
            torznab: fetchIndexers("http://prowlarr.media.svc.cluster.local:8080", "{{ .prowlarr_api_key }}", "cross-seed"),
            useClientTorrents: true
          };
  dataFrom:
    - extract:
        key: cross-seed
    - extract:
        key: prowlarr
    - extract:
        key: radarr
    - extract:
        key: sonarr
